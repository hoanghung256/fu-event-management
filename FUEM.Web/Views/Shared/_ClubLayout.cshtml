@using System.Security.Claims
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.CurrentUserId = HttpContextAccessor.HttpContext?.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}
<!DOCTYPE html>
<html class="no-js" lang="en" style="--clr-theme-1: #ff6f00 !important;">
<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>FUEM-FPTU Event Management System - Club</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="theme-style-mode" content="1">
    <link rel="shortcut icon" type="image/x-icon" href="@Url.Content("~/img/logo/logo-fpt-small.svg")" />

    <link rel="stylesheet" href="@Url.Content("~/theme/css/bootstrap.min.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/meanmenu.min.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/animate.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/metisMenu.min.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/swiper-bundle.min.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/slick.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/backtotop.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/magnific-popup.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/flaticon_expovent.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/fontawesome-pro.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/spacing.css")">
    <link rel="stylesheet" href="@Url.Content("~/theme/css/main.css")">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/main.min.css' rel='stylesheet' />

    <style>
        /* --- Enhanced Custom CSS for Notification Popup --- */
        .app-notification-bell {
            position: relative;
            display: inline-block;
            margin-right: 20px;
        }

            .app-notification-bell i {
                font-size: 24px;
                color: #333;
                transition: color 0.3s ease, transform 0.2s ease;
            }

            .app-notification-bell:hover i {
                color: #ff6f00;
                transform: scale(1.1);
            }

            .app-notification-bell .badge {
                position: absolute;
                top: -8px;
                right: -12px;
                padding: 4px 7px;
                border-radius: 50%;
                background: linear-gradient(135deg, #ff6f00, #ff8f00);
                color: white;
                font-size: 11px;
                font-weight: 600;
                min-width: 18px;
                height: 18px;
                display: flex;
                align-items: center;
                justify-content: center;
                box-shadow: 0 3px 10px rgba(255, 111, 0, 0.4);
                animation: pulse 2s infinite;
                border: 2px solid white;
            }

        @@keyframes pulse {
            0%, 100% {
                transform: scale(1);
                box-shadow: 0 3px 10px rgba(255, 111, 0, 0.4);
            }

            50% {
                transform: scale(1.15);
                box-shadow: 0 5px 15px rgba(255, 111, 0, 0.6);
            }
        }

        .app-notification-popup {
            position: absolute;
            top: 100%;
            right: 0;
            width: 400px;
            background-color: white;
            border: 1px solid #e1e8ed;
            border-radius: 16px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.15), 0 0 0 1px rgba(0,0,0,0.05);
            z-index: 1000;
            display: none;
            max-height: 500px;
            overflow: hidden;
            transform-origin: top right;
            animation: fadeInScale 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        @@keyframes fadeInScale {
            from {
                opacity: 0;
                transform: scale(0.95) translateY(-15px);
                filter: blur(10px);
            }

            to {
                opacity: 1;
                transform: scale(1) translateY(0);
                filter: blur(0);
            }
        }

        .app-notification-card {
            display: flex;
            flex-direction: column;
            height: 100%;
            overflow-x: hidden;
        }

        .app-notification-header {
            padding: 20px 24px;
            border-bottom: 1px solid #f0f3f6;
            background: linear-gradient(135deg, #ff6f00 0%, #ff8f00 100%);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-shrink: 0;
            border-radius: 16px 16px 0 0;
        }

            .app-notification-header h5 {
                margin: 0;
                font-size: 1.3rem;
                font-weight: 700;
                color: white;
                text-shadow: 0 1px 2px rgba(0,0,0,0.1);
            }

            .app-notification-header .view-all-link {
                font-size: 0.9rem;
                color: rgba(255, 255, 255, 0.95);
                text-decoration: none;
                padding: 8px 16px;
                border: 1.5px solid rgba(255, 255, 255, 0.4);
                border-radius: 25px;
                transition: all 0.3s ease;
                font-weight: 500;
                backdrop-filter: blur(10px);
                background: rgba(255, 255, 255, 0.1);
            }

                .app-notification-header .view-all-link:hover {
                    background: rgba(255, 255, 255, 0.2);
                    text-decoration: none;
                    color: white;
                    transform: translateY(-1px);
                    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                }

        .app-notification-scroll {
            flex-grow: 1;
            overflow-y: auto;
            overflow-x: hidden;
            padding: 0;
            min-height: 0;
            max-height: 420px;
        }

            .app-notification-scroll::-webkit-scrollbar {
                width: 6px;
            }

            .app-notification-scroll::-webkit-scrollbar-track {
                background: #f8f9fa;
                border-radius: 10px;
            }

            .app-notification-scroll::-webkit-scrollbar-thumb {
                background: #60788d;
                border-radius: 10px;
            }

                .app-notification-scroll::-webkit-scrollbar-thumb:hover {
                    background: #60788d;
                }


        .app-notification-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

.app-notification-item {
    padding: 16px 24px;
    border-bottom: 1px solid #f8f9fa;
    transition: all 0.3s ease;
    cursor: pointer;
    display: block;
    text-decoration: none;
    color: inherit;
    position: relative;
    background: white;
}

            .app-notification-item::before {
                content: '';
                position: absolute;
                left: 0;
                top: 0;
                bottom: 0;
                width: 4px;
                background: transparent;
                transition: all 0.3s ease;
            }

            .app-notification-item:hover::before {
                background: linear-gradient(135deg, #ff6f00, #ff8f00);
            }

            .app-notification-item:last-child {
                border-bottom: none;
                border-radius: 0 0 16px 16px;
            }

            .app-notification-item:hover {
                background: linear-gradient(135deg, #fff8f0, #fff4e6);
                transform: translateX(4px);
                box-shadow: 0 4px 15px rgba(255, 111, 0, 0.08);
            }

            .app-notification-item p {
                margin-bottom: 8px;
                font-size: 0.95rem;
                color: #495057;
                display: -webkit-box;
                -webkit-line-clamp: 2;
                -webkit-box-orient: vertical;
                overflow: hidden;
                text-overflow: ellipsis;
                line-height: 1.5;
            }

                .app-notification-item p.notification-title {
                    font-weight: 600;
                    color: #2c3e50;
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    font-size: 1.05rem;
                    margin-bottom: 6px;
                }

        .app-notification-time {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.82rem;
            color: #8e9aaf;
            margin-top: 10px;
        }

            .app-notification-time span {
                color: #6c757d;
            }

            .app-notification-time .status strong {
                color: #ff8f00;
                font-size: 0.75rem;
                border-radius: 12px;
                font-weight: 500;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }

        /* --- Enhanced Notification Detail Modal --- */
        .app-modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(8px);
            z-index: 1000;
            display: none;
            opacity: 0;
            animation: overlayFadeIn 0.3s ease forwards;
        }

        @@keyframes overlayFadeIn {
            to {
                opacity: 1;
            }
        }

        .app-notification-detail-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 0;
            border-radius: 20px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
            z-index: 1001;
            width: 90%;
            max-width: 580px;
            max-height: 80vh;
            overflow: hidden;
            display: none;
            animation: modalFadeIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        @@keyframes modalFadeIn {
            from {
                opacity: 0;
                transform: translate(-50%, -45%) scale(0.9);
                filter: blur(10px);
            }

            to {
                opacity: 1;
                transform: translate(-50%, -50%) scale(1);
                filter: blur(0);
            }
        }

        .app-notification-detail-modal .modal-header {
            background: linear-gradient(135deg, #ff6f00 0%, #ff8f00 100%);
            color: white;
            padding: 28px 32px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: none;
            border-radius: 20px 20px 0 0;
        }

            .app-notification-detail-modal .modal-header h4 {
                margin: 0;
                font-size: 1.4rem;
                font-weight: 700;
                color: white;
                text-shadow: 0 1px 2px rgba(0,0,0,0.1);
            }

            .app-notification-detail-modal .modal-header .close-button {
                background: rgba(255, 255, 255, 0.2);
                border: none;
                font-size: 1.4rem;
                cursor: pointer;
                color: white;
                width: 40px;
                height: 40px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: all 0.3s ease;
                backdrop-filter: blur(10px);
            }

                .app-notification-detail-modal .modal-header .close-button:hover {
                    background: rgba(255, 255, 255, 0.3);
                    transform: rotate(90deg) scale(1.1);
                }

        .app-notification-detail-modal .modal-body {
            padding: 32px;
            overflow-y: auto;
            max-height: calc(80vh - 140px);
            background: #fafbfc;
        }

            .app-notification-detail-modal .modal-body p {
                margin-bottom: 18px;
                line-height: 1.7;
                color: #495057;
                word-wrap: break-word;
                overflow-wrap: break-word;
                white-space: normal;
                font-size: 1rem;
            }

            .app-notification-detail-modal .modal-body strong {
                color: #2c3e50;
                font-weight: 600;
            }

            .app-notification-detail-modal .modal-body span {
                word-wrap: break-word;
                overflow-wrap: break-word;
                white-space: normal;
                display: inline-block;
                max-width: 100%;
            }

        /* Loading and Empty States */
        .loading-message, .no-notifications-message {
            text-align: center;
            color: #8e9aaf;
            padding: 50px 24px;
            font-style: italic;
            font-size: 1rem;
        }

        .loading-message {
            background: linear-gradient(135deg, #fff8f0, #fff4e6);
        }

        /* Responsive Design */
        @@media (max-width: 480px) {
            .app-notification-popup {
                width: 360px;
                right: -10px;
            }

            .app-notification-detail-modal {
                width: 95%;
                margin: 10px;
            }

            .app-notification-header {
                padding: 16px 20px;
            }

            .app-notification-item {
                padding: 14px 20px;
            }
        }

        .notification-content {
    display: flex;
    align-items: flex-start;
    gap: 12px;
}

.notification-avatar {
    flex-shrink: 0;
}

.notification-avatar img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid #e1e8ed;
    transition: all 0.3s ease;
}

.notification-text {
    flex: 1;
    min-width: 0;
}

.notification-title {
    margin: 0 0 4px 0 !important;
    font-weight: 600 !important;
    font-size: 14px !important;
    color: #2c3e50 !important;
    line-height: 1.3;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.notification-message {
    margin: 0 0 8px 0 !important;
    font-size: 14px !important;
    color: #495057 !important;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

.notification-dot {
    width: 8px;
    height: 8px;
    background-color: #ff6f00;
    border-radius: 50%;
    flex-shrink: 0;
    margin-left: auto;
    margin-top: 4px;
}

.app-notification-item:hover .notification-avatar img {
    border-color: #ff6f00;
    transform: scale(1.05);
}

.app-notification-item hr {
    display: none;
}

        /* General Layout CSS (kept from your original) */
        body {
            display: flex;
            min-height: 100vh;
            margin: 0;
            flex-direction: row;
        }

        .expovent__sidebar {
            width: 280px;
            background-color: #000;
            color: white;
            transition: width 0.3s ease;
            flex-shrink: 0;
            position: fixed;
            z-index: 10; /* Ensure sidebar is above main content if needed */
            height: 100vh; /* Make sidebar take full viewport height */
            display: flex; /* Make it a flex container */
            flex-direction: column; /* Stack children vertically */
        }

            .expovent__sidebar.collapsed {
                width: 80px;
            }

            .expovent__sidebar .logo-details {
                text-align: center;
                margin-bottom: 20px;
                display: flex;
                align-items: center;
                justify-content: center;
                min-height: 50px;
                padding: 5px;
                box-sizing: border-box;
                background-color: #000; /* Ensure logo area has consistent background */
            }

                .expovent__sidebar .logo-details .logo__white {
                    max-width: 60px;
                    height: auto;
                    transition: opacity 0.3s ease, margin-right 0.3s ease, max-width 0.3s ease;
                    margin-right: 5px;
                }

            .expovent__sidebar.collapsed .logo-details .logo__white {
                margin-right: 0;
                max-width: 50px;
            }

            .expovent__sidebar .logo-details .log__smnall {
                max-width: 140px;
                height: auto;
                opacity: 1;
                transition: opacity 0.3s ease, width 0.3s ease, margin-left 0.3s ease;
                margin-left: 1rem;
                display: block;
            }

            .expovent__sidebar.collapsed .logo-details .log__smnall {
                opacity: 0;
                width: 0;
                margin-left: 0;
                display: none;
            }

            .expovent__sidebar .sidebar__inner {
                flex-grow: 1;
                display: flex;
                flex-direction: column;
                overflow-y: auto;
                padding-bottom: 0; /* Remove bottom padding to let copyright stick to bottom */
            }

            .expovent__sidebar ul {
                list-style: none;
                padding-left: 0;
                margin: 0;
                flex-grow: 1;
                padding: 10px 0; /* Add some padding around the menu items */
            }

                .expovent__sidebar ul li {
                    margin-bottom: 12px;
                }

                    .expovent__sidebar ul li a {
                        display: flex;
                        align-items: center;
                        padding: 10px 14px;
                        color: white;
                        text-decoration: none;
                        border-radius: 8px;
                        transition: background-color 0.3s ease, padding 0.3s ease, justify-content 0.3s ease;
                        white-space: nowrap;
                        overflow: hidden;
                        justify-content: flex-start;
                    }

            .expovent__sidebar.collapsed ul li a {
                justify-content: center;
                padding: 10px 0;
            }

            .expovent__sidebar ul li a i {
                margin-right: 10px;
                min-width: 20px;
                text-align: center;
                transition: margin-right 0.3s ease;
            }

            .expovent__sidebar.collapsed ul li a i {
                margin-right: 0;
            }

            .expovent__sidebar ul li a:hover {
                background-color: #ff6f00;
                padding-left: 18px;
            }

            .expovent__sidebar.collapsed ul li a:hover {
                padding-left: 0;
            }

            .expovent__sidebar .nav-text {
                opacity: 1;
                width: auto;
                transition: opacity 0.3s ease, width 0.3s ease;
            }

            .expovent__sidebar.collapsed .nav-text {
                opacity: 0;
                width: 0;
                display: none;
            }

        /* --- Footer (Copyright) --- */
        .sidebar__copyright {
            text-align: center;
            /*padding: 15px 5px;*/
            font-size: 0.75rem; /* Slightly smaller font when collapsed for better fit */
            color: rgba(255, 255, 255, 0.7);
            width: 100%;
            background-color: #000;
            box-sizing: border-box;
            flex-shrink: 0; /* Prevent it from shrinking */
            transition: font-size 0.3s ease, padding 0.3s ease;
        }

        /* Khi sidebar thu gọn, chữ copyright vẫn hiển thị nhưng có thể căn giữa và nhỏ hơn */
        .expovent__sidebar.collapsed .sidebar__copyright {
            font-size: 0.65rem; /* Even smaller font when collapsed */
            padding: 10px 0; /* Less padding to fit */
            white-space: nowrap; /* Prevent text wrapping */
            overflow: hidden; /* Hide overflow */
            text-overflow: ellipsis; /* Add ellipsis for overflowed text */
        }
            /* Make sure the text is visible */
            .expovent__sidebar.collapsed .sidebar__copyright p {
                margin: 0; /* Remove default paragraph margin */
                line-height: normal; /* Ensure normal line height */
            }


        /* --- Main Content Area --- */
        .page__body-wrapper {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            background-color: #f5f5f5;
            overflow-x: hidden;
            margin-left: 280px; /* Offset for the fixed sidebar */
            transition: margin-left 0.3s ease;
        }

        .expovent__sidebar.collapsed + .page__body-wrapper {
            margin-left: 80px; /* Adjust offset when sidebar is collapsed */
        }

        /* --- Header Styling --- */
        .app__header__area {
            background: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            border-bottom: 1px solid #ddd;
            align-items: center;
            flex-shrink: 0;
        }

        .app__header-left {
            display: flex;
            align-items: center;
        }

        .app__header-toggle {
            background-color: #fff;
            padding: 12px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 40px;
            width: 40px;
            transition: background-color 0.2s;
        }

            .app__header-toggle:hover {
                background-color: #f5f5f5;
            }

            .app__header-toggle i {
                font-size: 20px;
                color: #ff6f00;
                transition: transform 0.2s ease;
            }

            .app__header-toggle:hover i {
                transform: scale(1.1);
            }

        .bar-icon-2 span {
            display: block;
            width: 25px;
            height: 3px;
            margin: 5px 0;
            background-color: #333;
            transition: 0.3s;
        }

        .app__header-right {
            display: flex;
            align-items: center;
        }

        .user__portfolio {
            display: flex;
            align-items: center;
            cursor: pointer;
            padding: 5px 10px;
            border-radius: 5px;
            transition: background-color 0.2s;
            position: relative;
        }

            .user__portfolio:hover {
                background-color: #f1f1f1;
            }

        .user__portfolio-thumb img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 10px;
        }

        .user__content span {
            font-weight: 500;
            color: #333;
        }

        .user__dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0px 8px 16px rgba(0,0,0,0.2);
            z-index: 1000;
            min-width: 160px;
            display: none;
            padding: 10px 0;
            list-style: none;
        }

            .user__dropdown ul {
                padding: 0;
                margin: 0;
            }

            .user__dropdown li a {
                color: #333;
                padding: 10px 15px;
                text-decoration: none;
                display: flex;
                align-items: center;
                white-space: nowrap;
            }

                .user__dropdown li a:hover {
                    background-color: #f1f1f1;
                    color: #ff6f00;
                }

                .user__dropdown li a svg {
                    margin-right: 8px;
                }

        .main-content {
            padding: 0px 2rem;
            flex-grow: 1;
            overflow-y: auto;
        }
    </style>
</head>
<body class="body-area">
    <div id="preloader">
        <div class="sk-three-bounce">
            <div class="sk-child sk-bounce1"></div>
            <div class="sk-child sk-bounce2"></div>
            <div class="sk-child sk-bounce3"></div>
        </div>
    </div>

    <div class="expovent__sidebar">
        <div class="logo-details">
            <span>
                <a href="@Url.Action("Index", "Club")">
                    <img class="logo__white" src="@Url.Content("~/img/logo/logo-fpt-small.svg")" alt="FPT Logo">
                </a>
            </span>
            <span>
                <a href="@Url.Action("Index", "Club")">
                    <img class="log__smnall" src="@Url.Content("~/img/logo/logoFpt.svg.png")" alt="FPT University Logo">
                </a>
            </span>
        </div>
        <div class="sidebar__inner simple-bar">
            <div class="dlabnav">
                <ul class="metismenu" id="menu">
                    <li>
                        <a class="asidebar" href="@Url.Action("Index", "Club")" aria-expanded="false" style="text-decoration: none;">
                            <i class="fa-solid fa-house"></i>
                            <span class="nav-text ">Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a class="asidebar" href="@Url.Action("Create", "EventRegistration")" aria-expanded="false" style="text-decoration: none;">
                            <i class="fa-solid fa-calendar-plus"></i>
                            <span class="nav-text">Create Event</span>
                        </a>
                    </li>
                    <li>
                        <a class="asidebar" href="@Url.Action("Index", "OrganizedEvent")" aria-expanded="false" style="text-decoration: none;">
                            <i class="fa-solid fa-calendar-check"></i>
                            <span class="nav-text">Your Events</span>
                        </a>
                    </li> 
                    <li>
                        <a class="asidebar" href="@Url.Action("Send", "ClubNotification")" aria-expanded="false" style="text-decoration: none;">
                            <i class="fa-solid fa-bell"></i>
                            <span class="nav-text">Send Notification</span>
                        </a>
                    </li>
                    <li>
                        <a class="asidebar" href="@Url.Action("Profile", "Club")" aria-expanded="false" style="text-decoration: none;">
                            <i class="fa-solid fa-user"></i>
                            <span class="nav-text">Profile</span>
                        </a>
                    </li>
                    <li>
                        <a class="asidebar" href="@Url.Action("Index", "Chat")" aria-expanded="false" style="text-decoration: none;">
                            <i class="fa-solid fa-comments"></i>
                            <span class="nav-text">Chat</span>
                        </a>
                    </li>
                    <li>
                        <a class="asidebar" href="@Url.Action("SignOut", "Authentication")" aria-expanded="false" style="text-decoration: none;">
                            <i class="fa-solid fa-right-from-bracket"></i>
                            <span class="nav-text">Log out</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="sidebar__copyright">
            <p>Copyright FUEM 2025</p>
        </div>
    </div>
    <div class="page__body-wrapper">
        <div class="app__header__area">
            <div class="app__header-left">
                <a id="sidebar__active" class="app__header-toggle" href="javascript:void(0)">
                    <i class="fa-solid fa-bars"></i>
                </a>
            </div>
            <div class="app__header-right">
                <div class="app-notification-bell">
                    <a href="javascript:void(0);" id="appNotificationBellLink" style="text-decoration: none; color: inherit;">
                        <i class="fa-solid fa-bell"></i>
                        <span class="badge badge-danger" id="appNotificationBellCount" style="display: none;">0</span>
                    </a>

                    <!-- Notification Popup HTML (using new classes) -->
                    <div class="app-notification-popup" id="appNotificationPopup">
                        <div class="app-notification-card">
                            <div class="app-notification-header">
                                <div class="app-notification-inner">
                                    <h5>Notifications</h5>
                                </div>
                                <a href="@Url.Action("Index", "ClubNotification")" class="view-all-link">View All</a>
                            </div>
                            <div class="app-notification-scroll">
                                <ul id="appNotificationPopupList" style="padding: 0;">
                                    <!-- Notifications will be loaded here -->
                                    <p class="text-center text-muted p-3" id="appLoadingPopupMessage">Đang tải thông báo...</p>
                                    <p class="text-center text-muted p-3" id="appNoPopupNotificationsMessage" style="display: none;">Bạn chưa có thông báo nào.</p>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="nav-item p-relative">
                    <div class="dropdown">
                        <!-- Trigger -->
                        <a id="userportfolio"
                           href="#"
                           class="user__portfolio dropdown-toggle"
                           role="button"
                           data-bs-toggle="dropdown"
                           aria-expanded="false"
                           style="text-decoration: none;">
                            <div class="user__portfolio-thumb">
                                @{
                                    var avatarPath = HttpContextAccessor.HttpContext.Session.GetString("avatarPath") ?? "~/img/user/default-avatar.jpg";
                                }
                                <img class="rounded-circle" src="@Url.Content(avatarPath)" alt="Avatar" />
                            </div>
                            <div class="user__content">
                                <span>@User.FindFirst(ClaimTypes.GivenName)?.Value</span>
                            </div>
                        </a>

                        <!-- Dropdown Menu -->
                        <ul class="dropdown-menu">
                            <li>
                                <a class="dropdown-item" href="@Url.Action("Profile", "Club")" style="text-decoration: none;">
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <g clip-path="url(#clip0_643_344)">
                                            <path d="M13.6569 10.3431C12.7855 9.47181 11.7484 8.82678 10.6168 8.43631C11.8288 7.60159 12.625 6.20463 12.625 4.625C12.625 2.07478 10.5502 0 8 0C5.44978 0 3.375 2.07478 3.375 4.625C3.375 6.20463 4.17122 7.60159 5.38319 8.43631C4.25162 8.82678 3.2145 9.47181 2.34316 10.3431C0.832156 11.8542 0 13.8631 0 16H1.25C1.25 12.278 4.27803 9.25 8 9.25C11.722 9.25 14.75 12.278 14.75 16H16C16 13.8631 15.1678 11.8542 13.6569 10.3431ZM8 8C6.13903 8 4.625 6.486 4.625 4.625C4.625 2.764 6.13903 1.25 8 1.25C9.86097 1.25 11.375 2.764 11.375 4.625C11.375 6.486 9.86097 8 8 8Z" fill="#7A7A7A" />
                                        </g>
                                        <defs>
                                            <clipPath id="clip0_643_344">
                                                <rect width="16" height="16" fill="white" />
                                            </clipPath>
                                        </defs>
                                    </svg>
                                    Profile
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="@Url.Action("SignOut", "Authentication")" style="text-decoration: none;">
                                    <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <g clip-path="url(#clip0_643_343)">
                                            <path d="M17.4368 8.43771H10.312C10.0015 8.43771 9.74951 8.18572 9.74951 7.87523C9.74951 7.56474 10.0015 7.31274 10.312 7.31274H17.4368C17.7473 7.31274 17.9993 7.56474 17.9993 7.87523C17.9993 8.18572 17.7473 8.43771 17.4368 8.43771Z" fill="#7A7A7A" />
                                            <path d="M14.6244 11.2502C14.4803 11.2502 14.3364 11.1954 14.2268 11.0852C14.0071 10.8654 14.0071 10.5091 14.2268 10.2894L16.6418 7.87457L14.2268 5.45958C14.0071 5.23986 14.0071 4.88364 14.2268 4.66392C14.4467 4.44406 14.8029 4.44406 15.0226 4.66392L17.835 7.47633C18.0547 7.69605 18.0547 8.05227 17.835 8.27199L15.0226 11.0844C14.9123 11.1954 14.7684 11.2502 14.6244 11.2502Z" fill="#7A7A7A" />
                                            <path d="M5.99986 18.0002C5.83932 18.0002 5.68703 17.9776 5.53488 17.9304L1.02142 16.4267C0.407305 16.2122 0 15.64 0 15.0003V1.50073C0 0.673487 0.672754 0.000732422 1.5 0.000732422C1.66039 0.000732422 1.81269 0.0232537 1.96498 0.0704934L6.4783 1.5742C7.09255 1.7887 7.49972 2.36093 7.49972 3.00059V16.5002C7.49972 17.3274 6.8271 18.0002 5.99986 18.0002ZM1.5 1.1257C1.29374 1.1257 1.12496 1.29447 1.12496 1.50073V15.0003C1.12496 15.16 1.23222 15.3085 1.38520 15.3617L5.8775 16.8587C5.90977 16.8692 5.95179 16.8752 5.99986 16.8752C6.20612 16.8752 6.37475 16.7064 6.37475 16.5002V3.00059C6.37475 2.84088 6.2675 2.69244 6.11452 2.63915L1.62222 1.14218C1.58995 1.13174 1.54793 1.1257 1.5 1.1257Z" fill="#7A7A7A" />
                                            <path d="M11.4371 6.00035C11.1266 6.00035 10.8746 5.74836 10.8746 5.43786V2.06297C10.8746 1.54622 10.454 1.12545 9.93722 1.12545H1.49998C1.18949 1.12545 0.9375 0.873462 0.9375 0.562971C0.9375 0.252479 1.18949 0.000488281 1.49998 0.000488281H9.93722C11.075 0.000488281 11.9996 0.925234 11.9996 2.06297V5.43786C11.9996 5.74836 11.7476 6.00035 11.4371 6.00035Z" fill="#7A7A7A" />
                                            <path d="M9.93699 15.7501H6.93699C6.6265 15.7501 6.37451 15.4981 6.37451 15.1876C6.37451 14.8771 6.6265 14.6251 6.93699 14.6251H9.93699C10.4537 14.6251 10.8744 14.2044 10.8744 13.6876V10.3127C10.8744 10.0022 11.1264 9.75024 11.4369 9.75024C11.7473 9.75024 11.9993 10.0022 11.9993 10.3127V13.6876C11.9993 14.8254 11.0747 15.7501 9.93699 15.7501Z" fill="#7A7A7A" />
                                        </g>
                                        <defs>
                                            <clipPath id="clip0_643_343">
                                                <rect width="18" height="18" fill="white" />
                                            </clipPath>
                                        </defs>
                                    </svg>
                                    Sign out
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="main-content">
            @RenderBody()
        </div>
    </div>

    <!-- Notification Detail Modal HTML (Club) -->
    <div class="app-modal-overlay" id="appModalOverlay"></div>
    <div class="app-notification-detail-modal" id="appNotificationDetailModal">
        <div class="modal-header">
            <h4 id="detailTitle"></h4>
            <button type="button" class="close-button" id="detailCloseButton">&times;</button>
        </div>
        <div class="modal-body">
            <p><strong>Content:</strong> <span id="detailContent"></span></p>
            <p><strong>Sender:</strong> <span id="detailSender"></span></p>
            <p><strong>Time:</strong> <span id="detailTime"></span></p>
        </div>
    </div>

    <script src="@Url.Content("~/theme/js/jquery-3.6.0.min.js")"></script>
    <script src="@Url.Content("~/theme/js/bootstrap.bundle.min.js")"></script>
    <script src="@Url.Content("~/theme/js/metisMenu.min.js")"></script>
    <script src="@Url.Content("~/theme/js/meanmenu.min.js")"></script>
    <script src="@Url.Content("~/theme/js/swiper-bundle.min.js")"></script>
    <script src="@Url.Content("~/theme/js/slick.min.js")"></script>
    <script src="@Url.Content("~/theme/js/backtotop.js")"></script>
    <script src="@Url.Content("~/theme/js/magnific-popup.min.js")"></script>
    <script src="@Url.Content("~/theme/js/wow.min.js")"></script>
    <script src="@Url.Content("~/theme/js/main.js")"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    @await Html.PartialAsync("_ToastSetUp")

    <!-- FullCalendar JS -->
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/locales/vi.global.min.js'></script>

    @* Render các section Scripts từ các View con trước *@
    @await RenderSectionAsync("Scripts", required: false)

    <!-- SignalR Client JS -->
    <script src="~/js/signalr/dist/browser/signalr.js"></script>

    <!-- SignalR Client Setup Script (Consolidated for Club) -->
    <script>
        $(document).ready(function () {
            // Khởi tạo metisMenu
            $('#menu').metisMenu();

            // Toggle thu gọn sidebar
            $('#sidebar__active').on('click', function () {
                $('.expovent__sidebar').toggleClass('collapsed');
            });

            // Dropdown user
            $('#userportfolio').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                $('.user__dropdown').toggle();
            });

            $(document).on('click', function (e) {
                if (!$(e.target).closest('.nav-item.p-relative').length) {
                    $('.user__dropdown').hide();
                }
            });

            // --- Logic cho Notification Popup (Club) ---
            const appNotificationBellLink = $('#appNotificationBellLink');
            const appNotificationPopup = $('#appNotificationPopup');
            const appNotificationPopupList = $('#appNotificationPopupList');
            const appLoadingPopupMessage = $('#appLoadingPopupMessage');
            const appNoPopupNotificationsMessage = $('#appNoPopupNotificationsMessage');

            let cachedNotifications = []; // To store notifications for detail view

            console.log("Club Notification elements selected:", {
                bellLinkExists: appNotificationBellLink.length > 0,
                popupExists: appNotificationPopup.length > 0,
                isPopupInitiallyHidden: appNotificationPopup.is(':hidden')
            });

            appNotificationBellLink.on('click', async function (e) {
                console.log("Club Notification bell clicked!");
                e.preventDefault();
                e.stopPropagation();

                if (appNotificationPopup.is(':visible')) {
                    console.log("Club Popup is visible, hiding it.");
                    appNotificationPopup.hide();
                } else {
                    console.log("Club Popup is hidden, showing it and loading notifications.");
                    appNotificationPopup.show();
                    await loadNotificationsForPopup();
                    $('#appNotificationBellCount').hide().text('0'); // Reset count when popup is opened
                }
            });

            // Close popup when clicking outside (excluding the detail modal and its overlay)
            $(document).on('click', function (e) {
                if (!$(e.target).closest('.app-notification-bell').length &&
                    !$(e.target).closest('.app-notification-detail-modal').length &&
                    !$(e.target).closest('.app-modal-overlay').length) {
                    if (appNotificationPopup.is(':visible')) {
                        console.log("Club: Click outside, hiding popup.");
                        appNotificationPopup.hide();
                    }
                }
            });

            async function loadNotificationsForPopup() {
                appLoadingPopupMessage.show();
                appNoPopupNotificationsMessage.hide();
                appNotificationPopupList.empty(); // Clear existing content

                try {
                    // API endpoint cho thông báo của Club
                    const response = await fetch("/api/club/notifications", {
                        method: "GET",
                        headers: {
                            'Accept': 'application/json'
                        }
                    });
                    const data = await response.json();
                    cachedNotifications = [...data]; // Store a copy for detail view

                    appLoadingPopupMessage.hide();
                    if (data && data.length > 0) {
                        // Đảo ngược mảng data trước khi lặp để prepend đúng thứ tự hiển thị (mới nhất lên đầu)
                        data.reverse();
                        data.forEach(function (noti) {
                            appendNotificationToPopup(noti);
                        });
                    } else {
                        appNoPopupNotificationsMessage.show();
                    }
                } catch (error) {
                    appLoadingPopupMessage.hide();
                    console.error("Club: Lỗi khi tải thông báo cho popup:", error);
                    toastr.error("Đã xảy ra lỗi khi tải thông báo của Club.");
                    appNoPopupNotificationsMessage.text("Đã xảy ra lỗi khi tải thông báo của Club.").show();
                }
            }

            // Function to add a notification to the popup list
            window.appendNotificationToPopup = function (noti) {
                const senderName = noti.sender && noti.sender.acronym ? noti.sender.acronym : "System";
                const senderAvt = noti.sender && noti.sender.avatarPath ? noti.sender.avatarPath : "/img/user/default-avatar.jpg";
                console.log('Hello', noti);
                const formattedTime = new Date(noti.sendingTime).toLocaleString('vi-VN');

                const avatarHtml = `<img src="${senderAvt}" alt="Avatar" onerror="this.src='/img/user/default-avatar.jpg'">`;

                const notificationHtml = `
                    <li class="app-notification-item" data-id="${noti.id}">
                        <div class="notification-content">
                            <div class="notification-avatar">
                                ${avatarHtml}
                            </div>
                            <div class="notification-text">
                                <p class="notification-title">${noti.title}</p>
                                <p class="notification-message">${noti.content}</p>
                                <div class="app-notification-time">
                                    <span>${formattedTime}</span>
                                    <span class="status"><strong>${senderName}</strong></span>
                                </div>
                            </div>
                            <div class="notification-dot"></div>
                        </div>
                    </li>
                `;
                appNotificationPopupList.prepend(notificationHtml);
                appNoPopupNotificationsMessage.hide();
            };

          // Function to update the notification bell count
            window.updateNotificationBellCount = function () {
                $.ajax({
                    url: "/api/club/notifications/count", // API endpoint cho số lượng thông báo của Club
                    method: "GET",
                    success: function (count) {
                        var bellSpan = $('#appNotificationBellCount');
                        if (bellSpan.length > 0) {
                            if (count > 0) {
                                bellSpan.text(count).show();
                            } else {
                                bellSpan.hide();
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Club: Lỗi khi lấy số lượng thông báo:", xhr.responseText);
                    }
                });
            };

            // This function will be called by SignalR to increment the bell count
            window.incrementNotificationBellCount = function () {
                var bellSpan = $('#appNotificationBellCount');
                var currentCount = parseInt(bellSpan.text()) || 0;
                bellSpan.text(currentCount + 1).show();
            };

            // --- Notification Detail Modal Logic (Club) ---
            const appNotificationDetailModal = $('#appNotificationDetailModal');
            const appModalOverlay = $('#appModalOverlay');
            const detailCloseButton = $('#detailCloseButton');

            // Event listener for clicking on a notification item in the popup
            appNotificationPopupList.on('click', '.app-notification-item', function () {
                console.log("Club: Notification item clicked. Data ID:", $(this).data('id'));
                const notificationId = $(this).data('id');
                const clickedNotification = cachedNotifications.find(noti => {
                    console.log(`Club: Comparing clicked ID ${notificationId} (type ${typeof notificationId}) with cached ID ${noti.id} (type ${typeof noti.id})`);
                    return String(noti.id) === String(notificationId);
                });

                if (clickedNotification) {
                    console.log("Club: Found clicked notification:", clickedNotification);
                    showNotificationDetail(clickedNotification);
                } else {
                    console.warn("Club: Clicked notification not found in cache for ID:", notificationId);
                    toastr.error("Không tìm thấy chi tiết thông báo của Club.");
                }
            });

            function showNotificationDetail(notification) {
                console.log("Club: Attempting to show detail modal for notification:", notification);
                $('#detailTitle').text(notification.title);
                $('#detailContent').text(notification.content);
                $('#detailSender').text(notification.sender && notification.sender.acronym ? notification.sender.acronym : "System");
                $('#detailTime').text(new Date(notification.sendingTime).toLocaleString('vi-VN'));

                appModalOverlay.show();
                appNotificationDetailModal.show();
                console.log("Club: Detail modal and overlay show commands executed.");
            }

            // Close detail modal when clicking on overlay or close button
            appModalOverlay.on('click', function () {
                console.log("Club: Overlay clicked, hiding detail modal.");
                appNotificationDetailModal.hide();
                appModalOverlay.hide();
            });

            detailCloseButton.on('click', function () {
                console.log("Club: Close button clicked, hiding detail modal.");
                appNotificationDetailModal.hide();
                appModalOverlay.hide();
            });


            // --- SignalR Client Setup (Club) ---
            var currentUserId = @Html.Raw(Json.Serialize(ViewBag.CurrentUserId));
            console.log("Club Layout - Current User ID (from layout script):", currentUserId);

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub")
                .withAutomaticReconnect()
                .build();

            // Register method to receive notifications from the server
            connection.on("ReceiveNotification", function (title, message, notificationId, acronym, avatarPath) {
                toastr.info(`${message}`, `${title}`, { timeOut: 10000, positionClass: 'toast-top-right' });
                console.log(`Club: Thông báo real-time: ${title} - ${message}, ID: ${notificationId}`);

                const newNotificationData = {
                    id: notificationId,
                    title: title,
                    content: message,
                    sendingTime: new Date().toISOString(),
                    sender: { acronym: acronym, avatarPath: avatarPath} 
                };

                // Add to cached notifications
                cachedNotifications.unshift(newNotificationData); // Add to the beginning

                if (appNotificationPopup.is(':visible')) {
                    console.log("Club: Popup hiển thị, thêm thông báo real-time vào popup.");
                    if (typeof window.appendNotificationToPopup === 'function') {
                        window.appendNotificationToPopup(newNotificationData);
                    }
                } else {
                    console.log("Club: Popup ẩn, tăng số lượng chuông.");
                    if (typeof window.incrementNotificationBellCount === 'function') {
                        window.incrementNotificationBellCount();
                    }
                }
            });

            // Register method to receive general messages (Club)
            connection.on("ReceiveMessage", function (title, message, notificationId, acronym, avatarPath) {
                // toastr.success(`${message}`, `${title}`, { timeOut: 5000, positionClass: 'toast-top-right' });
                console.log(`Club: Tin nhắn chung real-time: ${title} - ${message}, ID: ${notificationId}`);

                const newNotificationData = {
                    id: notificationId,
                    title: title,
                    content: message,
                    sendingTime: new Date().toISOString(),
                    sender: { acronym: acronym, avatarPath: avatarPath}
                };
				console.log("Club: New Noti data:", newNotificationData);

                // Add to cached notifications
                cachedNotifications.unshift(newNotificationData); // Add to the beginning

                if (appNotificationPopup.is(':visible')) {
                    console.log("Club: Popup hiển thị, thêm tin nhắn real-time vào popup.");
                    if (typeof window.appendNotificationToPopup === 'function') {
                        window.appendNotificationToPopup(newNotificationData);
                    }
                } else {
                    console.log("Club: Popup ẩn, tăng số lượng chuông cho tin nhắn.");
                    if (typeof window.incrementNotificationBellCount === 'function') {
                        window.incrementNotificationBellCount();
                    }
                }
            });

            connection.start()
                .then(() => {
                    console.log("Club Layout - SignalR Connected!");
                    if (currentUserId) {
                        // Club cũng sẽ tham gia nhóm User_<ID> của mình để nhận thông báo riêng
                        connection.invoke("JoinGroup", `User_${currentUserId}`)
                            .then(() => console.log(`Club Layout - Joined group: User_${currentUserId}`))
                            .catch(err => console.error(`Club Layout - Error joining group: ${err.toString()}`));
                    }
                    if (typeof window.updateNotificationBellCount === 'function') {
                        window.updateNotificationBellCount();
                    }
                })
                .catch(err => {
                    console.error("Club Layout - Error connecting to SignalR:", err.toString());
                    toastr.error("Không thể kết nối đến dịch vụ thông báo real-time cho Club.", "", { positionClass: 'toast-top-right' });
                });

            connection.onclose(function (error) {
                console.log("Club: SignalR disconnected:", error);
            });
        });
    </script>
</body>
</html>
